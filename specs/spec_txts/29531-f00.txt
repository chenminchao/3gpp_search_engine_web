
                                            3GPP TS 29.531 V15.0.0 (2018-06)
                                                     Technical Specification
                                         3rd Generation Partnership Project;
                   Technical Specification Group Core Network and Terminals;
                                                                  5G System;
                                           Network Slice Selection Services;
                                                                     Stage 3
                                                                (Release 15)
  [pic]  [pic]

The present document has been developed within the 3rd Generation
Partnership Project (3GPP TM) and may be further elaborated for the
purposes of 3GPP..
The present document has not been subject to any approval process by the
3GPP Organizational Partners and shall not be implemented.
This Specification is provided for future development work within 3GPP
only. The Organizational Partners accept no liability for any use of this
Specification.
Specifications and Reports for implementation of the 3GPP TM system should
be obtained via the 3GPP Organizational Partners' Publications Offices.











                                  Keywords
                               3GPP, 5G System


                                    3GPP

                               Postal address



                         3GPP support office address
                  650 Route des Lucioles - Sophia Antipolis
                              Valbonne - FRANCE
               Tel.: +33 4 92 94 42 00 Fax: +33 4 93 65 47 16

                                  Internet
                             http://www.3gpp.org


                           Copyright Notification

    No part may be reproduced except as authorized by written permission.
  The copyright and the foregoing restriction extend to reproduction in all
                                   media.

  © 2018, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA,
                                    TTC).
                            All rights reserved.

UMTS™ is a Trade Mark of ETSI registered for the benefit of its members
3GPP™ is a Trade Mark of ETSI registered for the benefit of its Members and
of the 3GPP Organizational Partners
LTE™ is a Trade Mark of ETSI registered for the benefit of its Members and
of the 3GPP Organizational Partners
GSM® and the GSM logo are registered and owned by the GSM Association

         Contents


Foreword 6

1  Scope 6

2  References 6

3  Definitions and abbreviations  7
3.1  Definitions  7
3.2  Abbreviations  7

4  Overview 7
4.1  Introduction 7

5  Services offered by the NSSF 8
5.1  Introduction 8
5.2  Nnssf_NSSelection Service  8
5.2.1  Service Description 8
5.2.2  Service Operations  8
5.2.2.1  Introduction  8
5.2.2.2  GET  8
5.2.2.2.1   General 8
5.2.2.2.2   Get service operation of Nnssf_NSSelection service during the
             registration procedure 9
5.2.2.2.3   Get service operation of Nnssf_NSSelection service during the
             PDU session establishment  9
5.3  Nnssf_NSSAIAvailability Service  10
5.3.1  Service Description 10
5.3.2  Service Operations  10
5.3.2.1  Introduction  10
5.3.2.2  Update Service Operation 11
5.3.2.2.1   General 11
5.3.2.3  Subscribe Service Operation  11
5.3.2.3.1   General 11
5.3.2.4  Unsubscribe Service Operation  12
5.3.2.4.1   General 12
5.3.2.5  Notify Service Operation 12
5.3.2.5.1   General 12
5.3.2.6  Delete Service Operation 13
5.3.2.6.1   General 13

6  API Definitions  13
6.1  Nnssf_NSSelection Service API  13
6.1.1  API URI  13
6.1.2  Usage of HTTP   14
6.1.2.1  General  14
6.1.2.2  HTTP standard headers  14
6.1.2.2.1   General 14
6.1.2.2.2   Content type 14
6.1.2.3  HTTP custom headers 14
6.1.2.3.1   General 14
6.1.3  Resources  14
6.1.3.1  Overview 14
6.1.3.2  Resource:  Network Slice Information Document  15
6.1.3.2.1   Description  15
6.1.3.2.2   Resource Definition 15
6.1.3.2.3   Resource Standard Methods 15
6.1.3.2.3.1 GET 15
6.1.3.2.4   Resource Custom Operations  16
6.1.4  Custom Operations without associated resources 16
6.1.5  Notifications   17
6.1.6  Data Model 17
6.1.6.1  General  17
6.1.6.2  Structured data types  17
6.1.6.2.1   Introduction 17
6.1.6.2.2   Type: AuthorizedNetworkSliceInfo 18
6.1.6.2.3   Type: SubscribedSNssai  18
6.1.6.2.4   Type: SubscribedNssai 18
6.1.6.2.5   Type: AllowedSNssai 19
6.1.6.2.6   Type: AllowedNssai  19
6.1.6.2.7   Type: NsiInformation  19
6.1.6.2.8   Type: MappingOfRequestedSNssai 19
6.1.6.2.9   Type: MappingOfRequestedNssai  19
6.1.6.2.10  Type: SliceInfoForRegistration 20
6.1.6.2.11  Type: SliceInfoForPDUSession   20
6.1.6.2.12  Type: ConfiguredSnssai  20
6.1.6.2.13  Type: ConfiguredNssai 20
6.1.6.3  Simple data types and enumerations  21
6.1.6.3.1   Introduction 21
6.1.6.3.2   Simple data types   21
6.1.6.3.3   Enumeration: RoamingIndication 21
6.1.6.4  Binary data   21
6.1.7  Error Handling  21
6.1.7.1  General  21
6.1.7.2  Protocol Errors 21
6.1.7.3  Application Errors  21
6.1.8  Feature negotiation 22
6.1.9  Security 22
6.2  Nnssf_NSSAIAvailability Service API   22
6.2.1  API URI  22
6.2.2  Usage of HTTP   22
6.2.2.1  General  22
6.2.2.2  HTTP standard headers  23
6.2.2.2.1   General 23
6.2.2.2.2   Content type 23
6.2.2.3  HTTP custom headers 23
6.2.2.3.1   General 23
6.2.3  Resources  23
6.2.3.1  Overview 23
6.2.3.2  Resource: NSSAI Availability Store  24
6.2.3.2.1   Description  24
6.2.3.2.2   Resource Definition 24
6.2.3.2.3   Resource Standard Methods 24
6.2.3.2.3.1 PUT 24
6.2.3.2.3.2 PATCH 25
6.2.3.2.3.3 DELETE  26
6.2.3.3  Resource: NSSAI Availability Notification Subscriptions Collection
           26
6.2.3.3.1   Description  26
6.2.3.3.2   Resource Definition 26
6.2.3.3.3   Resource Standard Methods 26
6.2.3.3.3.1 POST  26
6.2.3.4  Resource: Individual NSSAI Availability Notification Subscriptions
           27
6.2.3.4.1   Description  27
6.2.3.4.2   Resource Definition 27
6.2.3.4.3   Resource Standard Methods 27
6.2.3.4.3.1  DELETE 27
6.2.4  Custom Operations without associated resources 28
6.2.5  Notifications   28
6.2.5.1  General  28
6.2.5.2  NSSAI Availability Notification   28
6.2.5.2.1   Description  28
6.2.5.2.2   Notification Definition 28
6.2.5.2.3   Notification Standard Methods  28
6.2.5.2.3.1 POST  28
6.2.6  Data Model 29
6.2.6.1  General  29
6.2.6.2  Structured data types  29
6.2.6.2.1   Introduction 29
6.2.6.2.2   Type: NssaiAvailabilityInfo 30
6.2.6.2.3   Type: SupportedNssaiAvailabilityData 30
6.2.6.2.4   Type: AuthorizedNssaiAvailabilityData   30
6.2.6.2.5   Type: RestrictedSnssai  30
6.2.6.2.6   Type: AuthorizedNssaiAvailabilityinfo   31
6.2.6.2.7   Type: PatchDocument 31
6.2.6.2.8   Type: NssfEventSubscriptionCreateData   31
6.2.6.2.9   Type: NssfEventSubscriptionCreatedData  31
6.2.6.2.10  Type: NssfEventNotification 32
6.2.6.3  Simple data types and enumerations  32
6.2.6.3.1   Introduction 32
6.2.6.3.2   Simple data types   32
6.2.6.3.3   Enumeration: NssfEventType  32
6.2.6.4  Binary data   32
6.2.7  Error Handling  32
6.2.7.1  General  32
6.2.7.2  Protocol Errors 32
6.2.7.3  Application Errors  33
6.2.8  Feature negotiation 33
6.2.9  Security 33

Annex A (normative):   OpenAPI specification 34
A.1  General  34
A.2  Nnssf_NSSelection API 34
A.3  Nnssf_NSSAIAvailability API  37

Annex B (informative): Change history 43




         Foreword

This Technical Specification has been produced by the 3rd Generation
Partnership Project (3GPP).

The contents of the present document are subject to continuing work within
the TSG and may change following formal TSG approval. Should the TSG modify
the contents of the present document, it will be re-released by the TSG
with an identifying change of release date and an increase in version
number as follows:

  Version x.y.z

  where:

    x  the first digit:

       1  presented to TSG for information;

       2  presented to TSG for approval;

       3  or greater indicates TSG approved document under change control.

    y  the second digit is incremented for all changes of substance, i.e.
       technical enhancements, corrections, updates, etc.

    z  the third digit is incremented when editorial only changes have been
       incorporated in the document.


1  Scope

The present document specifies the stage 3 protocol and data model for the
Nnssf Service Based Interface. It provides stage 3 protocol definitions and
message flows, and specifies the API for each service offered by the NSSF.

The 5G System stage 2 architecture and procedures are specified in
3GPP TS 23.501 [2] and 3GPP TS 23.502 [3].

The Technical Realization of the Service Based Architecture and the
Principles and Guidelines for Services Definition are specified in
3GPP TS 29.500 [4] and 3GPP TS 29.501 [5].


2  References

The following documents contain provisions which, through reference in this
text, constitute provisions of the present document.

  -  References are either specific (identified by date of publication,
    edition number, version number, etc.) or non-specific.

  -  For a specific reference, subsequent revisions do not apply.

  -  For a non-specific reference, the latest version applies. In the case
    of a reference to a 3GPP document (including a GSM document), a non-
    specific reference implicitly refers to the latest version of that
    document in the same Release as the present document.

  [1]  3GPP TR 21.905: "Vocabulary for 3GPP Specifications".

  [2]  3GPP TS 23.501: "System Architecture for the 5G System; Stage 2".

  [3]  3GPP TS 23.502: "Procedures for the 5G System; Stage 2".

  [4]  3GPP TS 29.500: "5G System; Technical Realization of Service Based
             Architecture; Stage 3".

  [5]  3GPP TS 29.501: "5G System; Principles and Guidelines for Services
             Definition; Stage 3".

  [6]  OpenAPI: "OpenAPI 3.0.0 Specification",
             https://github.com/OAI/OpenAPI-
             Specification/blob/master/versions/3.0.0.md.

  [7]  3GPP TS 29.571: "5G System; Common Data Types for Service Based
             Interfaces; Stage 3".

  [8]  IETF RFC 6902: "JavaScript Object Notation (JSON) Patch".

  [9]  3GPP TS 23.003: "Numbering, addressing and identification".

  [10] IETF RFC 7540: "Hypertext Transfer Protocol Version 2 (HTTP/2)".

  [11] 3GPP TS 33.501: "Security architecture and procedures for 5G
             system".

  [12] IETF RFC 6749: "The OAuth 2.0 Authorization Framework".

  [13] 3GPP TS 29.510: "Network Function Repository Services; Stage 3".


3  Definitions and abbreviations


3.1  Definitions

For the purposes of the present document, the terms and definitions given
in 3GPP TR 21.905 [1] and the following apply. A term defined in the
present document takes precedence over the definition of the same term, if
any, in 3GPP TR 21.905 [1].


3.2  Abbreviations

For the purposes of the present document, the abbreviations given in 3GPP
TR 21.905 [1] and the following apply. An abbreviation defined in the
present document takes precedence over the definition of the same
abbreviation, if any, in 3GPP TR 21.905 [1].


4  Overview


4.1  Introduction

Within the 5GC, the NSSF offers services to the AMF and NSSF in a different
PLMN via the Nnssf service based interface (see 3GPP TS 23.501 [2] and
3GPP TS 23.502 [3]).

Figure 4.1-1 provides the reference model (in service based interface
representation and in reference point representation), with focus on the
NSSF and the scope of the present specification.

                                    [pic]

                Figure 4.1-1: NSSF in 5G System architecture

The functionalities supported by the NSSF are listed in subclause 6.2.14 of
3GPP TS 23.501 [2].


5  Services offered by the NSSF


5.1  Introduction

The NSSF supports the following services.

                  Table 5.1-1: NF Services provided by NSSF

|Service Name     |Description                        |Example    |
|                 |                                   |Consumer   |
|Nnssf_NSSelection|This service enables Network Slice |AMF, V-NSSF|
|                 |selection in both the Serving PLMN |           |
|                 |and the HPLMN                      |           |
|Nnssf_NSSAIAvaila|This service enables to update the |AMF        |
|bility           |S-NSSAI(s) the AMF supports on a   |           |
|                 |per TA basis on the NSSF and update|           |
|                 |the restricted S-NSSAI(s) per TA   |           |
|                 |and per PLMN on the AMF.           |           |



5.2  Nnssf_NSSelection Service


5.2.1  Service Description

The Nnssf_NSSelection service is used by an NF Service Consumer (e.g. AMF
or NSSF in a different PLMN) to retrieve the information related to network
slice in the non-roaming and roaming case. It also enables the NSSF to
provide to the AMF the Allowed NSSAI and the Configured NSSAI for the
Serving PLMN. The NF service consumer discovers the NSSF based on the local
configuration. The NSSF in a different PLMN is discovered based on the self-
constructed FQDN as specified in 3GPP TS 23.003[9].


5.2.2  Service Operations


5.2.2.1  Introduction

For the Nnssf_NSSelection service the following service operations are
defined:

  -  Get.


5.2.2.2  GET


5.2.2.2.1   General

The Get operation shall be used in the non-roaming or roaming scenario to
retrieve:

  -  The Allowed NSSAI, Configured NSSAI, target AMF Set or the list of
    candidate AMF(s), and optionally

    -  The Mapping Of Allowed NSSAI;

    -  The Mapping Of Configured NSSAI;

    -  NSI ID(s) associated with the Network Slice instances of the Allowed
       NSSAI;

    -  NRF(s) to be used to select NFs/services within the selected Network
       Slice instance(s) and NRF to be used to determine the list of
       candidate AMF(s) from the AMF Set, during Registration procedure and

    -  Information on whether the S-NSSAI(s) not included in the Allowed
       NSSAI which were part of the Requested NSSAI are rejected in the
       serving PLMN or in the current TA.

  -  The NRF to be used to select NFs/services within the selected network
    slice instance, and optionally the NSI ID associated with the S-NSSAI
    provided in the input, during the PDU Session Establishment procedure.

It is used in the following procedures:

  -  Registration with AMF re-allocation (see subclause 4.2.2.2.3 of
    3GPP TS 23.502 [3]);

  -  UE Configuration Update procedure (see subclause 4.2.4.2 of
    3GPP TS 23.502 [3]);

  -  SMF selection for non-roaming and roaming with local breakout (see
    subclause 4.3.2.2.3.2 of 3GPP TS 23.502 [3]) or SMF selection for home-
    routed roaming scenario (see subclause 4.3.2.2.3.3 of
    3GPP TS 23.502 [3]).

  NOTE:  The list of procedures above, which trigger invoking of the
         Nnssf_NSSelection_Get service operation, is not exhaustive.


5.2.2.2.2   Get service operation of Nnssf_NSSelection service during the
             registration procedure

In this procedure, the NF Service Consumer (e.g. AMF) retrieves the Allowed
NSSAI, Configured NSSAI, target AMF Set or the list of candidate AMF(s) and
other optional information.



                                    [pic]

    Figure 5.2.2.2.2-1: Retrieve the network slice information during the
                           registration procedure

  1  The AMF shall send a GET request to the NSSF. One or more of the
    following parameters shall be included as query parameters: Requested
    NSSAI, Subscribed S-NSSAI(s) with the indication if marked as default S-
    NSSAI, PLMN ID of the SUPI, TAI, NF type of the NF service consumer,
    Requester ID.

  2  On success, "200 OK" shall be returned in the following cases:

    - When the NSSF is able to find authorized network slice information
    for the requested network slice selection information, the response
    body shall include a payload body containing at least the Allowed
    NSSAI, target AMF Set or the list of candidate AMF(s);

    - If no slice instances can be found for the requested slice selection
    information, then the response body shall contain an empty
    "AuthorizedNetworkSliceInfo" JSON object.

    On failure, the NSSF shall return one of the HTTP status codes together
    with the response body listed in Table 6.1.3.2.3.1-3.


5.2.2.2.3   Get service operation of Nnssf_NSSelection service during the
             PDU session establishment

In this procedure, the NF Service Consumer (e.g. AMF) retrieves the NRF and
the optionally the NSI ID of the network slice instance:



                                    [pic]

  Figure 5.2.2.2.3-1: Retrieve the network slice information during the PDU
                       session establishment procedure

  1  The NF Service consumer (e.g. AMF or NSSF in the different PLMN) shall
    send a GET request to the NSSF. The request shall include query
    parameters, contain at least S-NSSAI, S-NSSAI from the Configured NSSAI
    for the HPLMN that maps to the S-NSSAI from the Allowed NSSAI of the
    Serving PLMN, the NF type of the NF service consumer and Requester ID.
    For the procedure invoked in the Serving PLMN, the query parameters
    shall also contain non-roaming/LBO roaming/HR roaming indication, PLMN
    ID of the SUPI and TAI.

  2  On success, "200 OK" shall be returned in the following cases:

    - When the NSSF is able to find network slice instance information for
    the requested network slice selection information, the response body
    shall include a payload body containing at least the NRF to be used to
    select NFs/services within the selected Network Slice instance;

    - If no slice instances can be found for the requested slice selection
    information, then the response body shall contain an empty
    "AuthorizedNetworkSliceInfo" JSON object.

    On failure, the NSSF shall return one of the HTTP status codes together
    with the response body listed in Table 6.1.3.2.3.1-3.


5.3  Nnssf_NSSAIAvailability Service


5.3.1  Service Description

The Nnssf_NSSAIAvailability service is used by the AMF to update the S-
NSSAI(s) the AMF supports on a per TA basis on the NSSF, subscribe and
unsubscribe the notification of any changes to the NSSAI availability
information and used by the NSSF to update the restricted S-NSSAI(s) per TA
and per PLMN on the AMF.


5.3.2  Service Operations


5.3.2.1  Introduction

For the Nnssf_NSSAIAvailability service the following service operations
are defined:

  -  Update;

  -  Subscribe;

  -  Unsubscribe;

  -  Notify.


5.3.2.2  Update Service Operation


5.3.2.2.1   General

The Update operation shall be used by an NF Service Consumer (e.g. AMF) to
update the NSSF with the S-NSSAIs the NF service consumer (e.g. AMF)
supports per TA, and get the availability of the S-NSSAIs per TA for the S-
NSSAIs the NF service consumer (e.g. AMF) supports.

                                    [pic]

       Figure 5.3.2.2.1-1: Update the S-NSSAIs the AMF supports per TA

  1. The NF service consumer (e.g. AMF) shall send a PUT request to the
    resource representing the NSSAI Availability information of the
    individual NF, identified by the {nfId}, to replace or create the NSSAI
    Availability information of the NF. The payload of the body shall
    contain the NssaiAvailabilityInfo which contains one or more
    representations of the individual supportedSnssai information to be
    replaced.

     The NF service consumer (e.g. AMF) shall send a PATCH request to the
    resource representing the NSSAI Availability information of the
    individual NF, identified by the {nfId}, to update the NSSAI
    Availability information of the NF. The payload of the body shall
    contain the PatchDocument which contains one or more PatchItem
    instructions for updating the individual supportedSnssai resources.

  2. On success, "200 OK" shall be returned, the payload body of the
    PUT/PATCH response shall contain the representation describing the
    status of the request and the complete AuthorizedNssaiAvailabilityData
    information representing the current state of the
    AuthorizedNssaiAvailabilityInfo.

    On failure, the NSSF shall return one of the HTTP status code together
    with the response body listed in Table 6.2.3.2.3.1-2 / Table
    6.2.3.2.3.2-2.


5.3.2.3  Subscribe Service Operation


5.3.2.3.1   General

The Subscribe Operation is used by a NF Service Consumer (e.g. AMF) to
subscribe to a notification of any changes to the NSSAI availability
information (e.g. the restricted S-NSSAI(s) per TA and per PLMN on the AMF)
upon this is updated by another AMF.

                                    [pic]

                  Figure 5.3.2.3.1-1 Create a subscription

  1. The NF Service Consumer shall send a POST request to create a
    subscription resource in the NSSF. The payload body of the POST request
    shall contain a representation of the individual event subscription
    resource to be created in the NssfEventSubscriptionCreateData.

  2. On success, "201 Created" shall be returned, and the payload body of
    the POST response shall contain the representation describing the
    status of the created subscription in NssfEventSubscriptionCreatedData
    that may contain the AuthorizedNssaiAvailabilityData information, if
    available. The Location header shall contain the location (URI) of the
    created subscription resource.

    On failure, the NSSF shall return one of the HTTP status code together
    with the response body listed in Table 6.2.3.3.3.1-2.


5.3.2.4  Unsubscribe Service Operation


5.3.2.4.1   General

The Unsubscribe Operation is used by a NF Service Consumer (e.g. AMF) to
unsubscribe to a notification of any changes to the NSSAI availability
information (e.g. the restricted S-NSSAI(s) per TA and per PLMN on the AMF)
upon this is updated by another AMF.

                                    [pic]



                                    [pic]

                Figure 5.3.2.4.1-1 Unsubscribe a subscription

  1. The NF Service Consumer shall send a DELETE request to delete an
    existing subscription resource in the NSSF.

  2. If the request is accepted, the NSSF shall respond with the status
    code 204 indicating the resource identified by subscription ID is
    successfully deleted.

    On failure, the NSSF shall return one of the HTTP status code together
    with the response body listed in Table 6.2.3.4.3.2-2.


5.3.2.5  Notify Service Operation


5.3.2.5.1   General

The Notify Service operation shall be used by the NSSF to update the NF
Service Consumer (e.g. AMF) with any S-NSSAIs restricted per TA and per
PLMN in the serving PLMN of the UE.

                                    [pic]

   Figure 5.3.2.5.1-1: Update the AMF with any S-NSSAIs restricted per TA

  1. The NSSF shall send a POST request to the resource representing the
    NSSF availability resource in the NF service consumer (e.g. AMF). The
    payload body of the POST request shall contain the one representations
    of the individual NssfEventNotificationresource.

  2. On success, "204 No Content" shall be returned and the payload body of
    the POST response shall be empty.


5.3.2.6  Delete Service Operation


5.3.2.6.1   General

The Delete Service operation shall be used by the NF service consumer (e.g.
AMF) to delete the NSSAI availability information stored for the NF service
consumer in the NSSF.

                                    [pic]

    Figure 5.3.2.6.1-1: Delete the NSSAI Availability Information at NSSF

  1. The NF service consumer (e.g. AMF) shall send a DELETE request to
    remove the NSSAI availability information for the NF service consumer
    represented by the {nfId} (e.g. AMF ID).

  2. The NSSF shall delete the NSSAI Availability information for the
    individual AMF and shall return the 204 No Content status code.


6  API Definitions


6.1  Nnssf_NSSelection Service API


6.1.1  API URI

URIs of this API shall have the following root:

{apiRoot}/{apiName}/{apiVersion}/

where the "apiName" shall be set to "nnssf-nsselection" and the
"apiVersion" shall be set to "v1" for the current version of this
specification.


6.1.2  Usage of HTTP


6.1.2.1  General

HTTP/2, IETF RFC 7540 [10], shall be used as specified in clause 5 of
3GPP TS 29.500 [4].

An OpenAPI [6] specification of HTTP messages and content bodies for the
Nnssf_NSSelection service is specified in Annex A.


6.1.2.2  HTTP standard headers


6.1.2.2.1   General

See subclause 5.2.2 of 3GPP TS 29.500 [4] for the usage of HTTP standard
headers.


6.1.2.2.2   Content type

The JSON format shall be supported. The use of JSON format shall be as
specified in sub-clause 5.4 of 3GPP TS 29.500 [4].


6.1.2.3  HTTP custom headers


6.1.2.3.1   General

In this release of this specification, no custom headers specific to the
Nnssf_NSSelection service are defined. For 3GPP specific HTTP custom
headers used across all service based interfaces, see clause 5.2.3 of
3GPP TS 29.500 [4].


6.1.3  Resources


6.1.3.1  Overview

Figure 6.1.3.1-1 describes the resource URI structure of the
Nnssf_NSSelection API.

                                    [pic]

   Figure 6.1.3.1-1: Resource URI structure of the  nnssf_nsselection API

Table 6.1.3.1-1 provides an overview of the resources and applicable HTTP
methods.

               Table 6.1.3.1-1: Resources and methods overview

|Resource name     |Resource URI         |HTTP      |Description            |
|                  |                     |method or |                       |
|                  |                     |custom    |                       |
|                  |                     |operation |                       |
|Network Slice     |//{apiRoot}/nnssf-nss|GET       |To retrieve network    |
|Related           |election/v1/         |          |slice information. See |
|Information       |network-slice-informa|          |subclause 6.1.3.2.3.1. |
|                  |tion                 |          |                       |
|                  |                     |          |Maps to                |
|                  |                     |          |Nnssf_NSSelection_Get  |
|                  |                     |          |service operation.     |



6.1.3.2  Resource:  Network Slice Information Document


6.1.3.2.1   Description

This resource represents the network slice related information maintained
by the NSSF.This resource is modelled with the Document resource archetype
(see subclause C.1 of 3GPP TS 29.501 [5]).


6.1.3.2.2   Resource Definition

Resource URI: //{apiRoot}/nnssf-nsselection/v1/ network-slice-information

This resource shall support the resource URI variables defined in
table 6.1.3.2.2-1.

         Table 6.1.3.2.2-1: Resource URI variables for this resource

|Name          |Definition                                                  |
|apiRoot       |See subclause 6.1.1                                         |



6.1.3.2.3   Resource Standard Methods


6.1.3.2.3.1 GET

This method retrieves the information related to the selected slice based
on the input query parameters provided by the NF service consumer specified
in table 6.1.3.2.3.1-1.

This method shall support input query parameters specified in
table 6.1.3.2.3.1-1 and the response data structure and response codes
specified in table 6.1.3.2.3.1-3.

  Table 6.1.3.2.3.1-1: URI query parameters supported by the GET method on
                                this resource

|Name        |Data type |P       |Cardinality |Description                  |
|nf-id       |NfInstance|M       |1           |This IE shall contain the NF |
|            |Id        |        |            |identifier of the NF service |
|            |          |        |            |consumer.                    |
|slice-info-r|SliceInfoF|C       |0..1        |This IE shall be present when|
|equest-for-r|orRegistra|        |            |the network slice information|
|egistration |tion      |        |            |is requested during the      |
|            |          |        |            |Registration procedure       |
|            |          |        |            |towards an NSSF in the       |
|            |          |        |            |serving PLMN.                |
|slice-info-r|SliceInfoF|C       |0..1        |This IE shall be present when|
|equest-for-p|orPDUSessi|        |            |the network slice information|
|du-session  |on        |        |            |is requested during the PDU  |
|            |          |        |            |session establishment        |
|            |          |        |            |procedure.                   |
|home-plmn-id|PlmnId    |C       |0..1        |This IE shall be present in  |
|            |          |        |            |the request towards an NSSF  |
|            |          |        |            |in the serving PLMN if the   |
|            |          |        |            |subscriber is a roamer to the|
|            |          |        |            |serving PLMN. When present,  |
|            |          |        |            |this IE shall contain the    |
|            |          |        |            |home PLMN Id of the UE.      |
|tai         |Tai       |C       |0..1        |This IE shall be present in  |
|            |          |        |            |the request towards an NSSF  |
|            |          |        |            |in the serving PLMN. When    |
|            |          |        |            |present, this IE shall       |
|            |          |        |            |contain the TAI the UE is    |
|            |          |        |            |currently located.           |
|supported-fe|SupportedF|C       |0..1        |This IE shall be present if  |
|atures      |eatures   |        |            |at least one optional feature|
|            |          |        |            |defined in subclause 6.1.8 is|
|            |          |        |            |supported.                   |


  Table 6.1.3.2.3.1-2: Data structures supported by the GET Request Body on
                                this resource

|Data type   |P      |Cardinality              |Description                  |
|n/a         |       |                         |                             |


 Table 6.1.3.2.3.1-3: Data structures supported by the GET Response Body on
                                this resource

|Data type   |P      |Cardinalit|Response      |Description                  |
|            |       |y         |codes         |                             |
|ProblemDetai|M      |1         |403 Forbidden |This represents the case,    |
|ls          |       |          |              |where the NF service consumer|
|            |       |          |              |is not authorized to retrieve|
|            |       |          |              |the slice selection          |
|            |       |          |              |information or the SNSSAI    |
|            |       |          |              |included in the requested    |
|            |       |          |              |slice selection information  |
|            |       |          |              |is not supported in the PLMN.|
|            |       |          |              |                             |
|            |       |          |              |The application specific     |
|            |       |          |              |error information shall be   |
|            |       |          |              |provided in the "cause"      |
|            |       |          |              |attribute. The "cause"       |
|            |       |          |              |attribute shall be set to:   |
|            |       |          |              |- " SNSSAI_NOT_SUPPORTED", if|
|            |       |          |              |the SNSSAI included in the   |
|            |       |          |              |requested slice selection    |
|            |       |          |              |information is not supported |
|            |       |          |              |in the PLMN.                 |



6.1.3.2.4   Resource Custom Operations

There are no custom methods supported on the network-slice-information
collection resource.


6.1.4  Custom Operations without associated resources

There are no custom operations without associated resources defined for the
Nnssf_NSSelection service in this version of this API.


6.1.5  Notifications

In this release of this specification, there are no notifications defined
for the Nnssf_NSSelection service.


6.1.6  Data Model


6.1.6.1  General

This subclause specifies the application data model supported by the API.

Table 6.1.6.1-1 specifies the data types defined for the Nnssf service
based interface protocol.

           Table 6.1.6.1-1: Nnssf_NSSelection specific Data Types

|Data type         |Section     |Description                            |
|                  |defined     |                                       |
|AuthorizedNetworkS|6.1.6.2.2   |Contains the authorized network slice  |
|liceInfo          |            |information.                           |
|SubscribedSNssai  |6.1.6.2.3   |Contains the subscribed S-NSSAI.       |
|SubscribedNssai   |6.1.6.2.4   |Contains an array of subscribed S-NSSAI|
|                  |            |that constitute the subscribed NSSAI   |
|                  |            |information.                           |
|AllowedSNssai     |6.1.6.2.5   |Contains the authorized S-NSSAI and    |
|                  |            |optional mapped home S-NSSAI and       |
|                  |            |network slice instance information.    |
|AllowedNssai      |6.1.6.2.6   |Contains an array of allowed S-NSSAI   |
|                  |            |that constitute the allowed NSSAI      |
|                  |            |information for the authorized network |
|                  |            |slice information.                     |
|NsiInformation    |6.1.6.2.7   |Contains the identifier of NRF to be   |
|                  |            |used to select NFs/services within the |
|                  |            |selected Network Slice instance and    |
|                  |            |optional the Identifier of the selected|
|                  |            |Network Slice instance.                |
|MappingOfRequested|6.1.6.2.8   |Contains the mapping of requested      |
|SNssai            |            |S-NSSAI in the serving network and the |
|                  |            |value of the home network.             |
|MappingOfRequested|6.1.6.2.9   |Contains an array of the requested     |
|Nssai             |            |S-NSSAI mapping.                       |
|SliceInfoForRegist|6.1.6.2.10  |Contains the slice information         |
|ration            |            |requested during a Registration        |
|                  |            |procedure.                             |
|SliceInfoForPDUSes|6.1.6.2.11  |Contains the slice information         |
|sion              |            |requested during PDU Session           |
|                  |            |establishment procedure.               |
|ConfiguredSnssai  |6.1.6.2.12  |Contains the configured S-NSSAI(s)     |
|                  |            |authorized by the NSSF in the serving  |
|                  |            |PLMN and optional mapped home S-NSSAI. |
|ConfiguredNssai   |6.1.6.2.13  |Contains an array of  the configured   |
|                  |            |S-NSSAI(s) authorized by the NSSF in   |
|                  |            |the serving PLMN                       |


Table 6.1.6.1-2 specifies data types re-used by the Nnssf- service based
interface protocol from other specifications, including a reference to
their respective specifications and when needed, a short description of
their use within the Nnssf service based interface.

                  Table 6.1.6.1-2: Nnssf re-used Data Types

|Data type      |Reference    |Comments                                 |
|SupportedFeatur|3GPP TS 29.57|Used to negotiate the applicability of   |
|es             |1 [7]        |the optional features defined in         |
|               |             |table 6.1.8-1.                           |



6.1.6.2  Structured data types


6.1.6.2.1   Introduction

This subclause defines the structures to be used in resource
representations.

Allowed structures are: array, object.


6.1.6.2.2   Type: AuthorizedNetworkSliceInfo

      Table 6.1.6.2.2-1: Definition of type AuthorizedNetworkSliceInfo

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |
|configuredNssai|ConfiguredN|C |1       |This IE shall contain the        |
|               |ssai       |  |        |configured S-NSSAI(s) authorized |
|               |           |  |        |by the NSSF in the serving PLMN, |
|               |           |  |        |if the NSSF did not receive any  |
|               |           |  |        |Requested NSSAI or the Requested |
|               |           |  |        |NSSAI includes an S-NSSAI that is|
|               |           |  |        |not valid in the Serving PLMN.   |
|targetAmfSet   |string     |O |0..1    |This IE may be included by the   |
|               |           |  |        |NSSF based on configuration and  |
|               |           |  |        |if the NSSF received the         |
|               |           |  |        |Requested NSSAI and the          |
|               |           |  |        |subscribed S-NSSAI(s). When      |
|               |           |  |        |present, this IE shall contain   |
|               |           |  |        |the target AMF set.              |
|candidateAmf   |array(NfIns|O |0..N    |This IE may be included by the   |
|               |tanceId)   |  |        |NSSF based on configuration and  |
|               |           |  |        |if the NSSF received the         |
|               |           |  |        |Requested NSSAI and the          |
|               |           |  |        |subscribed S-NSSAI(s). When      |
|               |           |  |        |present, this IE shall contain   |
|               |           |  |        |the list of candidate AMF(s).    |
|rejectedNssaiIn|array(Snssa|O |0..N    |This IE may be included by the   |
|Plmn           |i)         |  |        |NSSF if the NSSF received the    |
|               |           |  |        |Requested NSSAI and the          |
|               |           |  |        |subscribed S-NSSAI(s). When      |
|               |           |  |        |present, this IE shall contain   |
|               |           |  |        |the rejected NSSAI in the PLMN.  |
|rejectedNssaiIn|array(Snssa|O |0..N    |This IE may be included by the   |
|Ta             |i)         |  |        |NSSF if the NSSF received the    |
|               |           |  |        |Requested NSSAI and the          |
|               |           |  |        |subscribed S-NSSAI(s). When      |
|               |           |  |        |present, this IE shall contain   |
|               |           |  |        |the rejected NSSAI in the current|
|               |           |  |        |TA.                              |
|nsiInformation |NsiInformat|C |0..1    |This IE shall be included by the |
|               |ion        |  |        |NSSF if the NSSF received the    |
|               |           |  |        |S-NSSAI. (i.e. during PDU session|
|               |           |  |        |establishment procedure)         |
|supportedFeatur|SupportedFe|C |0..1    |This IE shall be present if at   |
|es             |atures     |  |        |least one optional feature       |
|               |           |  |        |defined in subclause 6.1.8 is    |
|               |           |  |        |supported                        |



6.1.6.2.3   Type: SubscribedSNssai

           Table 6.1.6.2.3-1: Definition of type SubscribedSNssai

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |
|defaultIndicati|boolean    |O |0..1    |If it is set, the subscribed     |
|on             |           |  |        |S-NSSAI is a default subscribed  |
|               |           |  |        |S-NSSAI.                         |



6.1.6.2.4   Type: SubscribedNssai

            Table 6.1.6.2.4-1: Definition of type SubscribedNssai

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |



6.1.6.2.5   Type: AllowedSNssai

             Table 6.1.6.2.5-1: Definition of type AllowedSNssai

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |
|nsiInformation |array(NsiIn|O |0..N    |If present, this IE shall include|
|               |formation) |  |        |the information related to the   |
|               |           |  |        |network slice instance           |
|               |           |  |        |corresponding to the allowed     |
|               |           |  |        |S-NSSAI.                         |
|mappedHomeSNssa|SNssai     |O |1       |When present, this IE shall      |
|i              |           |  |        |contain the mapped S-NSSAI value |
|               |           |  |        |of home network corresponding to |
|               |           |  |        |the allowed S-NSSAI in the       |
|               |           |  |        |serving PLMN.                    |



6.1.6.2.6   Type: AllowedNssai

             Table 6.1.6.2.6-1: Definition of type AllowedNssai

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |



6.1.6.2.7   Type: NsiInformation

            Table 6.1.6.2.7-1: Definition of type NsiInformation

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |
|nsiId          |NsiId      |O |0..1    |This IE may be optionally        |
|               |           |  |        |included by the NSSF. When       |
|               |           |  |        |present, this IE shall contain   |
|               |           |  |        |the Identifier of the selected   |
|               |           |  |        |Network Slice instance           |



6.1.6.2.8   Type: MappingOfRequestedSNssai

       Table 6.1.6.2.8-1: Definition of type MappingOfRequestedSNssai

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |
|homeSNssai     |SNssai     |M |1       |This IE shall contain the mapped |
|               |           |  |        |S-NSSAI value of home network.   |



6.1.6.2.9   Type: MappingOfRequestedNssai

        Table 6.1.6.2.9-1: Definition of type MappingOfRequestedNssai

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |



6.1.6.2.10  Type: SliceInfoForRegistration

       Table 6.1.6.2.10-1: Definition of type SliceInfoForRegistration

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |
|mappingOfReques|MappingOfRe|O |0..1    |This IE may be present when the  |
|tedSNssai      |questedNssa|  |        |network slice information is     |
|               |i          |  |        |requested during the Registration|
|               |           |  |        |procedure. If present, this IE   |
|               |           |  |        |shall contain the Mapping Of     |
|               |           |  |        |Requested NSSAI.                 |



6.1.6.2.11  Type: SliceInfoForPDUSession

        Table 6.1.6.2.11-1: Definition of type SliceInfoForPDUSession

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |
|roamingIndicati|RoamingIndi|M |1       |This IE shall contain the        |
|on             |cation     |  |        |indication whether the UE is in  |
|               |           |  |        |non-roaming, LBO roaming or HR   |
|               |           |  |        |roaming.                         |
|mappedHomeSnssa|Snssai     |O |1       |When present, this IE shall      |
|i              |           |  |        |contain the mapped S-NSSAI value |
|               |           |  |        |of home network corresponding to |
|               |           |  |        |the configured S-NSSAI in the    |
|               |           |  |        |serving PLMN.                    |



6.1.6.2.13  Type: ConfiguredNssai

           Table 6.1.6.2.13-1: Definition of type ConfiguredNssai

|Attribute name|Data type   |P |Cardinal|Description                      |
|              |            |  |ity     |                                 |



6.1.6.3  Simple data types and enumerations


6.1.6.3.1   Introduction

This subclause defines simple data types and enumerations that can be
referenced from data structures defined in the previous subclauses.


6.1.6.3.2   Simple data types

The simple data types defined in table 6.1.6.3.2-1 shall be supported.

                    Table 6.1.6.3.2-1: Simple data types

|Type Name     |Type         |Description                              |
|              |Definition   |                                         |
|NsiId         |string       |Represents the Network Slice Instance    |
|              |             |Identifier                               |



6.1.6.3.3   Enumeration: RoamingIndication

              Table 6.1.6.3.3-1: Enumeration RoamingIndication

|Enumeration value         |Description                                |
|NON_ROAMING               |This value indicates that the UE is not    |
|                          |roaming.                                   |
|LOCAL_BREAKOUT            |This value indicates that the UE is roaming|
|                          |but is using a local breakout PDU session. |
|HOME_ROUTED_ROAMING       |This value indicates that the UE is roaming|
|                          |and is using a home routed PDU session.    |



6.1.6.4  Binary data

There is no binary data used for the Nnssf_NSSelection service in this
version of the API.


6.1.7  Error Handling


6.1.7.1  General

HTTP error handling shall be supported as specified in subclause 5.2.4 of
3GPP TS 29.500 [4].


6.1.7.2  Protocol Errors

Protocol Error Handling shall be supported as specified in subclause
5.2.7.2 of 3GPP TS 29.500 [4].


6.1.7.3  Application Errors

The common application errors defined in the Table 5.2.7.2-1 in
3GPP TS 29.500 [4] may also be used for the Nnssf_NSSelection service. The
following application errors listed in Table 6.1.7.3-1 are specific for the
Nnssf_NSSelection service.

                     Table 6.1.7.3-1: Application errors

|Application Error   |HTTP status  |Description                           |
|                    |code         |                                      |
|SNSSAI_NOT_SUPPORTED|403 Forbidden|This cause value shall be set when the|
|                    |             |requested slice selection information |
|                    |             |is for SNSSAI(s) not supported in the |
|                    |             |PLMN.                                 |



6.1.8  Feature negotiation

The feature negotiation mechanism specified in subclause 6.6 of
3GPP TS 29.500 [4] shall be used to negotiate the optional features
applicable between the NSSF and the NF Service Consumer, for the
Nnssf_NSSelection service, if any.

The NF Service Consumer shall indicate the optional features it supports
for the Nnssf_NSSelection service, if any, by including the
supportedFeatures attribute in the HTTP POST request when requesting the
NSSF to provide the allowed NSSAI information.

The NSSF shall determine the supported features for the requested network
slice information resource as specified in subclause 6.6 of
3GPP TS 29.500 [4] and shall indicate the supported features by including
the supportedFeatures attribute in the allowed NSSAI information it returns
in the HTTP response.

The syntax of the supportedFeatures attribute is defined in subclause 5.2.2
of 3GPP TS 29.571 [5].

The following features are defined for the Nnssf_NSSelection service.

       Table 6.1.8-1: Features of supportedFeatures attribute used by
                          Nnssf_NSSelection service

|Feature|Feature|M/O |Description                                       |
|Number |       |    |                                                  |
|       |       |    |                                                  |
|Feature number: The order number of the feature within the             |
|supportedFeatures attribute (starting with 1).                         |
|Feature: A short name that can be used to refer to the bit and to the  |
|feature.                                                               |
|M/O: Defines if the implementation of the feature is mandatory ("M") or|
|optional ("O").                                                        |
|Description: A clear textual description of the feature.               |



6.1.9  Security

As indicated in 3GPP TS 33.501 [11], the access to the Nnssf_NSSelection
API shall be authorized by means of the OAuth2 protocol (see
IETF RFC 6749 [12]), using the "Client Credentials" authorization grant,
where the NRF (see 3GPP TS 29.510 [13]) plays the role of the authorization
server.

An NF Service Consumer, prior to consuming services offered by the
Nnssf_NSSelection API, shall obtain a "token" from the authorization
server, by invoking the Access Token Request service, as described in
3GPP TS 29.510 [13], subclause 5.4.2.2.

  NOTE:  When multiple NRFs are deployed in a network, the NRF used as
         authorization server is the same NRF that the NF Service Consumer
         used for discovering the Nnssf_NSSelection service.

The Nnssf_NSSelection API does not define any scopes for OAuth2
authorization.


6.2  Nnssf_NSSAIAvailability Service API


6.2.1  API URI

URIs of this API shall have the following root:

{apiRoot}/{apiName}/{apiVersion}/

where the "apiName" shall be set to "nnssf-nssaiavailability" and the
"apiVersion" shall be set to "v1" for the current version of this
specification.


6.2.2  Usage of HTTP


6.2.2.1  General

HTTP/2, IETF RFC 7540 [10], shall be used as specified in clause 5 of
3GPP TS 29.500 [4].

An OpenAPI [6] specification of HTTP messages and content bodies for the
Nnssf_NSSAIAvailability service is specified in Annex A.


6.2.2.2  HTTP standard headers


6.2.2.2.1   General

See subclause 5.2.2 of 3GPP TS 29.500 [4] for the usage of HTTP standard
headers.


6.2.2.2.2   Content type

The JSON format shall be supported. The use of JSON format shall be as
specified in sub-clause 5.4 of 3GPP TS 29.500 [4].


6.2.2.3  HTTP custom headers


6.2.2.3.1   General

In this release of this specification, no custom headers specific to the
Nnssf_NSSAIAvailability service are defined. For 3GPP specific HTTP custom
headers used across all service based interfaces, see clause 5.2.3 of
3GPP TS 29.500 [4].


6.2.3  Resources


6.2.3.1  Overview

                                    [pic]

 Figure 6.2.3.1-1: Resource URI structure of the Nnssf_NSSAIAvailability API

Table 6.2.3.1-1 provides an overview of the resources and applicable HTTP
methods.

               Table 6.2.3.1-1: Resources and methods overview

|Resource name    |Resource URI             |HTTP  |Description           |
|                 |                         |method|                      |
|                 |                         |or    |                      |
|                 |                         |custom|                      |
|                 |                         |operat|                      |
|                 |                         |ion   |                      |
|NSSAI            |//{apiRoot}/nnssf-nssaiav|PUT   |Updates the NSSF with |
|Availability     |ailability/              |      |the S-NSSAIs the NF   |
|Store            |v1/nssai-availability/{nf|      |service consumer (e.g.|
|                 |Id}                      |      |AMF)supports per TA.  |
|                 |                         |PATCH |Updates the NSSF with |
|                 |                         |      |the S-NSSAIs the NF   |
|                 |                         |      |service consumer (e.g.|
|                 |                         |      |AMF) supports per TA. |
|                 |                         |DELETE|Delete the resource of|
|                 |                         |      |the S-NSSAIs supported|
|                 |                         |      |per TA by the NF      |
|                 |                         |      |service consumer (e.g.|
|                 |                         |      |AMF)                  |
|NSSAI            |//{apiRoot}/nnssf-nssaiav|POST  |Create a subscription |
|Availability     |ailability/              |      |to the notification of|
|Notification     |v1/nssai-availability/sub|      |any changes to the    |
|Subscriptions    |scriptions               |      |NSSAI availability    |
|Collection       |                         |      |information.          |
|Individual NSSAI |//{apiRoot}/nnssf-nssaiav|DELETE|Unsubscribe to the    |
|Availability     |ailability/              |      |notification of any   |
|Notification     |v1/nssai-availability/sub|      |changes to the NSSAI  |
|Subscriptions    |scriptions/{subscriptionI|      |availability          |
|                 |d}                       |      |information.          |



6.2.3.2  Resource: NSSAI Availability Store


6.2.3.2.1   Description

This resource represents a collection of NSSAI Availability resources
generated by the NSSF.

This resource is modelled with the Store resource archetype (see subclause
C.1 of 3GPP TS 29.501 [5]).


6.2.3.2.2   Resource Definition

Resource URI: //{apiRoot}/nnssf-nssaiavailability/v1/nssai-
availability/{nfId}

This resource shall support the resource URI variables defined in
table 6.2.3.2.2-1.

         Table 6.2.3.2.2-1: Resource URI variables for this resource

|Name          |Definition                                                  |
|apiRoot       |See subclause 6.2.1                                         |
|nfId          |Represents the Identifier of the AMF for which the NSSAI    |
|              |Availability information is updated.                        |



6.2.3.2.3   Resource Standard Methods


6.2.3.2.3.1 PUT

This method shall support the request data structures specified in table
6.2.3.2.3.1-1 and the response data structures and response codes specified
in table 6.2.3.2.3.1-2.

  Table 6.2.3.2.3.1-1: Data structures supported by the PUT Request Body on
                                this resource

|Data type   |P |Cardinali|Description                                      |
|            |  |ty       |                                                 |
|NSSAIAvailab|M |1        |This IE contains the information regarding the   |
|ilityInfo   |  |         |NssaiAvailabilityData for the AMF and/or the     |
|            |  |         |corresponding notification URL for the NSSF to   |
|            |  |         |notify any changes to the NSSAI availability     |
|            |  |         |information.                                     |


 Table 6.2.3.2.3.1-2: Data structures supported by the PUT Response Body on
                                this resource

|Data type   |P |Cardinali|Response|Description                              |
|            |  |ty       |codes   |                                         |
|ProblemDetai|M |1        |403     |This represents the case, when the NF    |
|ls          |  |         |Forbidde|service consumer is not authorized to    |
|            |  |         |n       |update the NSSAI availability information|
|            |  |         |        |or the TAI/SNSSAI information provided is|
|            |  |         |        |not supported in the PLMN. The "cause"   |
|            |  |         |        |attribute shall be set to:               |
|            |  |         |        |- "SNSSAI_NOT_SUPPORTED", if the SNSSAI  |
|            |  |         |        |provided is not supported in the PLMN.   |
|ProblemDetai|M |1        |404 Not |This represents the case when the        |
|ls          |  |         |Found   |resource related to the NF Id for which  |
|            |  |         |        |the NSSAI availability information is    |
|            |  |         |        |updated is unavailable.                  |



6.2.3.2.3.2 PATCH

This method shall support the request data structures specified in table
6.2.3.2.3.2-1 and the response data structures and response codes specified
in table 6.2.3.2.3.2-2.

 Table 6.2.3.2.3.2-1: Data structures supported by the PATCH Request Body on
                                this resource

|Data type   |P |Cardinali|Description                                      |
|            |  |ty       |                                                 |
|PatchDocumen|M |1        |This IE contains the information regarding the   |
|t           |  |         |JSON patch instructions for updating the         |
|            |  |         |AuthorizedNssaiAvailabilityInfo.                 |


  Table 6.2.3.2.3.2-2: Data structures supported by the PATCH Response Body
                              on this resource

|Data type   |P |Cardinali|Response|Description                              |
|            |  |ty       |codes   |                                         |
|ProblemDetai|M |1        |403     |This represents the case, when the NF    |
|ls          |  |         |Forbidde|service consumer is not authorized to    |
|            |  |         |n       |update the NSSAI availability information|
|            |  |         |        |or the SNSSAI information provided is not|
|            |  |         |        |supported in the PLMN. The "cause"       |
|            |  |         |        |attribute shall be set to:               |
|            |  |         |        |- "SNSSAI_NOT_SUPPORTED", if the SNSSAI  |
|            |  |         |        |provided is not supported in the PLMN.   |
|ProblemDetai|M |1        |404 Not |This represents the case when the        |
|ls          |  |         |Found   |resource related to the NF Id for which  |
|            |  |         |        |the NSSAI availability information is    |
|            |  |         |        |updated is unavailable.                  |



6.2.3.2.3.3 DELETE

This method shall support the request data structures specified in table
6.2.3.2.3.3-1 and the response data structures and response codes specified
in table 6.2.3.2.3.3-2.

  Table 6.2.3.2.3.3-1: Data structures supported by the DELETE Request Body
                              on this resource

|Data type   |P |Cardinali|Description                                      |
|            |  |ty       |                                                 |
|n/a         |  |         |                                                 |


 Table 6.2.3.2.3.3-2: Data structures supported by the DELETE Response Body
                              on this resource

|Data type   |P |Cardinali|Response|Description                              |
|            |  |ty       |codes   |                                         |
|ProblemDetai|M |1        |404 Not |This represents the case when the        |
|ls          |  |         |Found   |resource related to the NF Id for which  |
|            |  |         |        |the NSSAI availability information is    |
|            |  |         |        |updated is unavailable.                  |



6.2.3.3  Resource: NSSAI Availability Notification Subscriptions Collection


6.2.3.3.1   Description

This resource represents the collection of NSSAI Availability Notification
Subscriptions in the NSSF.

This resource is modelled with the Collection resource archetype (see
subclause C.2 of 3GPP TS 29.501 [5]).


6.2.3.3.2   Resource Definition

Resource URI: //{apiRoot}/nnssf-nssaiavailability/v1/nssai-
availability/subscriptions

This resource shall support the resource URI variables defined in
table 6.2.3.3.2-1.

         Table 6.2.3.3.2-1: Resource URI variables for this resource

|Name          |Definition                                                  |
|apiRoot       |See subclause 6.2.1                                         |



6.2.3.3.3   Resource Standard Methods


6.2.3.3.3.1 POST

This method shall support the request data structures specified in table
6.2.3.3.3.1-1 and the response data structures and response codes specified
in table 6.2.3.3.3.1-2.

 Table 6.2.3.3.3.1-1: Data structures supported by the POST Request Body on
                                this resource

|Data type   |P |Cardinali|Description                                      |
|            |  |ty       |                                                 |
|NssfEventSub|M |1        |This IE contains the information regarding the   |
|scriptionCre|  |         |SubscriptionData for the AMF to notify any       |
|ateData     |  |         |changes to the NSSAI availability information.   |


 Table 6.2.3.3.3.1-2: Data structures supported by the POST Response Body on
                                this resource

|Data type   |P |Cardinali|Response|Description                              |
|            |  |ty       |codes   |                                         |
|ProblemDetai|M |1        |403     |This represents the case, when the NF    |
|ls          |  |         |Forbidde|service consumer is not authorized to    |
|            |  |         |n       |subscribe for the NSSAI availability     |
|            |  |         |        |information notification.                |
|ProblemDetai|M |1        |404 Not |This represents the case when the        |
|ls          |  |         |Found   |subscriptions collection resource does   |
|            |  |         |        |not exist at the NSSF..                  |



6.2.3.4  Resource: Individual NSSAI Availability Notification Subscriptions


6.2.3.4.1   Description

This resource represents an Individual NSSAI Availability Notification
Subscriptions resources generated by the NSSF.

This resource is modelled with the Document resource archetype (see
subclause C.1 of 3GPP TS 29.501 [5]).


6.2.3.4.2   Resource Definition

Resource URI: //{apiRoot}/nnssf-nssaiavailability/v1/nssai-
availability/subscriptions/{subscriptionId}

This resource shall support the resource URI variables defined in
table 6.2.3.4.2-1.

         Table 6.2.3.3.2-1: Resource URI variables for this resource

|Name          |Definition                                                  |
|apiRoot       |See subclause 6.2.1                                         |
|subscriptionId|Represents the Identifier of the subscription.              |



6.2.3.4.3   Resource Standard Methods


6.2.3.4.3.1   DELETE

This method shall support the request data structures specified in table
6.2.3.4.3.2-1 and the response data structures and response codes specified
in table 6.2.3.4.3.2-2.

  Table 6.2.3.3.3.2-1: Data structures supported by the DELETE Request Body
                              on this resource

|Data type   |P |Cardinali|Description                                      |
|            |  |ty       |                                                 |
|N/A         |  |         |                                                 |


 Table 6.2.3.4.3.2-2: Data structures supported by the DELETE Response Body
                              on this resource

|Data type   |P |Cardinali|Response|Description                              |
|            |  |ty       |codes   |                                         |
|ProblemDetai|M |1        |404 Not |This represents the case when the        |
|ls          |  |         |Found   |subscription resource is unavailable.    |



6.2.4  Custom Operations without associated resources

There are no custom operations without associated resources for the
Nnssf_NSSAIAvailability service in this version of the API.


6.2.5  Notifications


6.2.5.1  General

This subclause specifies the notifications provided by the
Nnssf_NSSAIAvailability service.


6.2.5.2  NSSAI Availability Notification


6.2.5.2.1   Description

If the NF Service Consumer (e.g. AMF) has provided the callback URI for
getting notified about the NSSAI availability information, the NSSF shall
notify the NF Service Consumer whenever the NSSAI availability information
is updated.


6.2.5.2.2   Notification Definition

Resource URI: {amfNssaiAvailabilityUri}

This resource URI is provided by the NF Service Consumer (e.g. AMF) during
NSSAI Availability Information update invoked by the NF Service Consumer.

              Table 6.2.5.2.2-1: Resources and methods overview

|Resource name      |Resource URI          |HTTP  |Description             |
|                   |                      |method|                        |
|                   |                      |or    |                        |
|                   |                      |custom|                        |
|                   |                      |operat|                        |
|                   |                      |ion   |                        |
|NSSAI Availability |{nfNssaiAvailabilityUr|POST  |The NSSF uses this      |
|Notification       |i}                    |      |callback URI to Update  |
|Callback           |                      |      |the AMF with any        |
|                   |                      |      |S-NSSAIs restricted per |
|                   |                      |      |TA in the serving PLMN  |
|                   |                      |      |of the UE.              |



6.2.5.2.3   Notification Standard Methods


6.2.5.2.3.1 POST

This method shall support the request data structures specified in table
6.2.5.2.3.1-1 and the response data structures and response codes specified
in table 6.2.5.2.3.1-2.

 Table 6.2.5.2.3.1-1: Data structures supported by the POST Request Body on
                                this resource

|Data type   |P |Cardinali|Description                                      |
|            |  |ty       |                                                 |
|NssfEventNot|M |1        |Representation of the data to be sent to the NF  |
|ification   |  |         |service consumer (e.g. AMF)to update NSSAI       |
|            |  |         |availability information, authorized by the NSSF |
|            |  |         |in the serving PLMN.                             |


 Table 6.2.5.2.3.1-2: Data structures supported by the POST Response Body on
                                this resource

|Data type   |P |Cardinali|Response|Description                              |
|            |  |ty       |codes   |                                         |



6.2.6  Data Model


6.2.6.1  General

This subclause specifies the application data model supported by the API.

Table 6.2.6.1-1 specifies the data types defined for the
Nnssf_NSSAIAvailability service based interface protocol.

        Table 6.2.6.1-1: Nnssf_NSSAIAvailability specific Data Types

|Data type             |Section    |Description                        |
|                      |defined    |                                   |
|NSSAIAvailabilityInfo |6.2.6.2.2  |This contains the Nssai            |
|                      |           |availability information requested |
|                      |           |by the AMF.                        |
|SupportedNssaiAvailabi|6.2.6.2.3  |This contains the Nssai            |
|lityData              |           |availability data information per  |
|                      |           |TA supported by the AMF.           |
|AuthorizedNssaiAvailab|6.2.6.2.4  |This contains the Nssai            |
|ilityData             |           |availability data information per  |
|                      |           |TA authorized by the NSSF          |
|RestrictedSnssai      |6.2.6.2.5  |This contains the restricted SNssai|
|                      |           |information per PLMN.              |
|AuthorizedNssaiAvailab|6.2.6.2.6  |This contains the Nssai            |
|ilityInfo             |           |availability data information      |
|                      |           |authorized by the NSSF             |
|                      |6.2.6.2.7  |This contains the JSON Patch       |
|PatchDocument         |           |instructions for updating the Nssai|
|                      |           |availability data information at   |
|                      |           |the NSSF.                          |
|NssfEventSubscriptionC|6.2.6.2.8  |This contains the information for  |
|reateData             |           |event subscription.                |
|NssfEventSubscriptionC|6.2.6.2.9  |This contains the information for  |
|reatedData            |           |event subscription.                |
|NssfEventNotification |6.2.6.2.10 |This contains the information for  |
|                      |           |created event subscription.        |


Table 6.2.6.1-2 specifies data types re-used by the Nnssf service based
interface protocol from other specifications, including a reference to
their respective specifications and when needed, a short description of
their use within the N<NF> service based interface.

                  Table 6.2.6.1-2: Nnssfre-used Data Types

|Data type      |Reference    |Comments                                 |
|SupportedFeatur|3GPP TS 29.57|Used to negotiate the applicability of   |
|es             |1 [7]        |the optional features defined in         |
|               |             |table 6.2.8-1.                           |
|Snssai         |3GPP TS 29.57|                                         |
|               |1 [7]        |                                         |
|PatchItem      |3GPP TS 29.57|Identifies the JSON Patch instructions   |
|               |1 [7]        |                                         |



6.2.6.2  Structured data types


6.2.6.2.1   Introduction

This subclause defines the structures to be used in resource
representations.

Allowed structures are: array, object.


6.2.6.2.2   Type: NssaiAvailabilityInfo

         Table 6.2.6.2.2-1: Definition of type NssaiAvailabilityInfo

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |
|nfNssaiAvailabi|Uri        |O |0..1    |This IE may be included by the NF|
|lityUri        |           |  |        |service consumer (e.g. AMF) for  |
|               |           |  |        |the NSSF to notify any change of |
|               |           |  |        |NSSAI availability information.  |
|supportedFeatur|SupportedFe|C |0..1    |This IE shall be present if at   |
|es             |atures     |  |        |least one optional feature       |
|               |           |  |        |defined in subclause 6.2.8 is    |
|               |           |  |        |supported                        |



6.2.6.2.3   Type: SupportedNssaiAvailabilityData

    Table 6.2.6.2.3-1: Definition of type SupportedNssaiAvailabilityData

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |
|supportedSNssai|array(SNssa|M |1..N    |This IE shall contain the        |
|               |i)         |  |        |S-NSSAI(s) supported by the AMF  |
|               |           |  |        |for the TA.                      |



6.2.6.2.4   Type: AuthorizedNssaiAvailabilityData

    Table 6.2.6.2.4-1: Definition of type AuthorizedNssaiAvailabilityData

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |
|supportedSnssai|array(Snssa|M |1..N    |This IE shall contain the        |
|               |i)         |  |        |SNSSAI(s) supported by the AMF   |
|               |           |  |        |for the TA.                      |
|restrictedSnssa|RestrictedS|O |0..N    |This IE may contain the          |
|i              |nssai      |  |        |restricted S-NSSAI(s) per PLMN   |
|               |           |  |        |for the TA. If the restricted    |
|               |           |  |        |SNssai is not present, no        |
|               |           |  |        |restricted S-NSSAI is applicable |
|               |           |  |        |to the TA. When present, this IE |
|               |           |  |        |shall be included only by the    |
|               |           |  |        |NSSF.                            |



6.2.6.2.5   Type: RestrictedSnssai

           Table 6.2.6.2.5-1: Definition of type RestrictedSNssai

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |
|sNssai         |array(Snssa|M |1..N    |This IE shall contain the array  |
|               |i)         |  |        |of restricted S-NSSAIs for the   |
|               |           |  |        |home PLMN Id.                    |



6.2.6.2.6   Type: AuthorizedNssaiAvailabilityinfo

   Table 6.2.6.2.6 -1: Definition of type AuthorizedNssaiAvailabilityInfo

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |
|nfNssaiAvailabi|Uri        |O |0..1    |This IE may be included by the   |
|lityUri        |           |  |        |NSSF if the NF service consumer  |
|               |           |  |        |(e.g. AMF) of the NSSF has       |
|               |           |  |        |included this IE in the          |
|               |           |  |        |NssaiAvailabilityInfo sent in the|
|               |           |  |        |request.                         |
|supportedFeatur|SupportedFe|C |0..1    |This IE shall be present if at   |
|es             |atures     |  |        |least one optional feature       |
|               |           |  |        |defined in subclause 6.2.8 is    |
|               |           |  |        |supported                        |



6.2.6.2.7   Type: PatchDocument

             Table 6.2.6.2.7-1: Definition of type PatchDocument

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |



6.2.6.2.8   Type: NssfEventSubscriptionCreateData

    Table 6.2.6.2.8-1: Definition of type NssfEventSubscriptionCreateData

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |
|tai            |array(Tai) |M |1..N    |Identifies the TAI supported by  |
|               |           |  |        |the NF service consumer (e.g.    |
|               |           |  |        |AMF).                            |
|event          |NssfEventTy|M |1       |Describes the event to be        |
|               |pe         |  |        |subscribed for this subscription.|



6.2.6.2.9   Type: NssfEventSubscriptionCreatedData

   Table 6.2.6.2.9-1: Definition of type NssfEventSubscriptionCreatedData

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |
|authorizedNssai|array(Autho|O |0..N    |If the authorized NSSAI          |
|AvailabilityDat|rizedNssaiA|  |        |availability (i.e. any S-NSSAIs  |
|a              |vailability|  |        |restricted per TA and per PLMN in|
|               |Data)      |  |        |the serving PLMN of the UE) is   |
|               |           |  |        |available, the NSSF may include  |
|               |           |  |        |this IE.                         |



6.2.6.2.10  Type: NssfEventNotification

        Table 6.2.6.2.10-1: Definition of type NssfEventNotification

|Attribute name |Data type  |P |Cardinal|Description                      |
|               |           |  |ity     |                                 |
|authorizednssai|array(Autho|M |1..N    |Contains the authorized NSSAI    |
|AvailabilityDat|rizedNssaiA|  |        |availability information.        |
|a              |vailability|  |        |                                 |
|               |Data)      |  |        |                                 |



6.2.6.3  Simple data types and enumerations


6.2.6.3.1   Introduction

This subclause defines simple data types and enumerations that can be
referenced from data structures defined in the previous subclauses.


6.2.6.3.2   Simple data types

The simple data types defined in table 6.2.6.3.2-1 shall be supported.

                    Table 6.2.6.3.2-1: Simple data types

|Type Name     |Type         |Description                              |
|              |Definition   |                                         |
|              |<one simple  |                                         |
|              |data type,   |                                         |
|              |e.g. boolean,|                                         |
|              |integer,     |                                         |
|              |null, number,|                                         |
|              |string>      |                                         |



6.2.6.3.3   Enumeration: NssfEventType

                Table 6.2.6.3.3-1: Enumeration NssfEventType

|Enumeration value         |Description                                |
|S-NSSAI_RESTRICTED_REPORT |A NF subscribes to this event to receive   |
|                          |the current S-NSSAI restricted per TA and  |
|                          |per PLMN in the serving PLMN of the UE.    |



6.2.6.4  Binary data

There is no binary data used for the Nnssf_NSSAIAvailability service in
this version of the API.


6.2.7  Error Handling


6.2.7.1  General

HTTP error handling shall be supported as specified in subclause 5.2.4 of
3GPP TS 29.500 [4].


6.2.7.2  Protocol Errors

Protocol Error Handling shall be supported as specified in subclause
5.2.7.2 of 3GPP TS 29.500 [4].


6.2.7.3  Application Errors

The common application errors defined in the Table 5.2.7.2-1 in
3GPP TS 29.500 [4] may also be used for the Nnssf_NSSAIAvailability
service. The following application errors listed in Table 6.1.7.3-1 are
specific for the Nnssf_NSSAIAvailability service.

                     Table 6.2.7.3-1: Application errors

|Application Error   |HTTP status  |Description                           |
|                    |code         |                                      |
|SNSSAI_NOT_SUPPORTED|403 Forbidden|The SNSSAI provided in the request is |
|                    |             |not supported in the PLMN.            |



6.2.8  Feature negotiation

The feature negotiation mechanism specified in subclause 6.6 of
3GPP TS 29.500 [4] shall be used to negotiate the optional features
applicable between the NSSF and the NF Service Consumer, for the
Nnssf_NSSAIAvailability service, if any.

The NF Service Consumer shall indicate the optional features it supports
for the Nnssf_NSSAIAvailability service, if any, by including the
supportedFeatures attribute in the HTTP PUT request when requesting the
NSSF to update the NSSAI Availability information.

The NSSF shall determine the supported features for the updated NSSAI
Availability information resource as specified in subclause 6.6 of
3GPP TS 29.500 [4] and shall indicate the supported features by including
the supportedFeatures attribute in the authorized NSSAI availability
information it returns in the HTTP response.

The syntax of the supportedFeatures attribute is defined in subclause 5.2.2
of 3GPP TS 29.571 [5].

The following features are defined for the Nnssf_NSSAIAvailability service.


       Table 6.2.8-1: Features of supportedFeatures attribute used by
                       Nnssf_NSSAIAvailability service

|Feature|Feature|M/O |Description                                       |
|Number |       |    |                                                  |
|       |       |    |                                                  |
|Feature number: The order number of the feature within the             |
|supportedFeatures attribute (starting with 1).                         |
|Feature: A short name that can be used to refer to the bit and to the  |
|feature.                                                               |
|M/O: Defines if the implementation of the feature is mandatory ("M") or|
|optional ("O").                                                        |
|Description: A clear textual description of the feature.               |



6.2.9  Security

As indicated in 3GPP TS 33.501 [11], the access to the
Nnssf_NSSAIAvailability API shall be authorized by means of the OAuth2
protocol (see IETF RFC 6749 [12]), using the "Client Credentials"
authorization grant, where the NRF (see 3GPP TS 29.510 [13]) plays the role
of the authorization server.

An NF Service Consumer, prior to consuming services offered by the
Nnssf_NSSAIAvailability API, shall obtain a "token" from the authorization
server, by invoking the Access Token Request service, as described in
3GPP TS 29.510 [13], subclause 5.4.2.2.

  NOTE:  When multiple NRFs are deployed in a network, the NRF used as
         authorization server is the same NRF that the NF Service Consumer
         used for discovering the Nnssf_NSSAIAvailability service.

The Nnssf_NSSAIAvailability API does not define any scopes for OAuth2
authorization.



Annex A (normative):
OpenAPI specification


A.1  General

This Annex specifies the formal definition of the Nnssf_NSSelection
service. It consists of OpenAPI 3.0.0 specifications, in YAML format.


A.2  Nnssf_NSSelection API

openapi: 3.0.0

info:
  version: '1.R15.0.0'
  title: 'NSSF NS Selection'
  description: 'NSSF Network Slice Selection Service'
security:
  - oAuth2Clientcredentials: []
servers:
  - url: https://{apiRoot}/nnssf-nsselection/v1
    variables:
      apiRoot:
        default: locahhost:8080
paths:
  /network-slice-information:
    get:
      summary:  Retrieve the Network Slice Selection Information
      tags:
        - Network Slice Information (Document)
      operationId: Get
      parameters:
        - name: nf-type
          in: query
          description: NF type of the NF service consumer
          required: true
          schema:
            $ref:
'TS29510_Nnrf_NFManagement.yaml#/components/schemas/NFType'
        - name: nf-id
          in: query
          description: NF Instance ID of the NF service consumer
          required: true
          schema:
            $ref:
'TS29571_CommonData.yaml#/components/schemas/NfInstanceId'
        - name: slice-info-request-for-registration
          in: query
          description: Requested network slice information during
Registration procedure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SliceInfoForRegistration'
        - name: slice-info-request-for-pdu-session
          in: query
          description: Requested network slice information during PDU
session establishment procedure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SliceInfoForPDUSession'
        - name: home-plmn-id
          in: query
          description: PLMN ID of the HPLMN
          content:
            application/json:
              schema:
                $ref: 'TS29571_CommonData.yaml#/components/schemas/PlmnId'
        - name: tai
          in: query
          description: TAI of the UE
          content:
            application/json:
              schema:
                $ref: 'TS29571_CommonData.yaml#/components/schemas/Tai'
        - name: supported-features
          in: query
          description: Features required to be supported by the NFs in the
target slice instance
          content:
            application/json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'

      responses:
        '200':
          description: OK (Successful Network Slice Selection)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedNetworkSliceInfo'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
          content:
            application/problem+json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'

components:
  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: '{nrfApiRoot}/oauth2/token'
          scopes: {}
  schemas:
    AuthorizedNetworkSliceInfo:
      type: object
      required:
        - allowedNssai
      properties:
        allowedNssai:
          $ref: '#/components/schemas/AllowedNssai'
        configuredNssai:
          $ref: '#/components/schemas/ConfiguredNssai'
        targetAmfSet:
          type: string
        candidateAmf:
          type: array
          items:
            $ref:
'TS29571_CommonData.yaml#/components/schemas/NfInstanceId'
        rejectedNssaiInPlmn:
          type: array
          items:
            $ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'
        rejectedNssaiInTa:
          type: array
          items:
            $ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'
        nsiInformation:
          $ref: '#/components/schemas/NsiInformation'
        supportedFeatures:
          $ref:
'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'

    SubscribedSNssai:
      type: object
      required:
        - subscribedSNssai
      properties:
        subscribedSNssai:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'
        defaultIndication:
          type: boolean

    SubscribedNssai:
      type: object
      required:
        - subscribedSNssai
      properties:
        subscribedSNssai:
          type: array
          items:
            $ref: '#/components/schemas/SubscribedSNssai'

    AllowedSNssai:
      type: object
      required:
        - allowedSNssai
      properties:
        allowedSNssai:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'
        nsiInformation:
          type: array
          items:
            $ref: '#/components/schemas/NsiInformation'
        mappedHomeSNssai:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'

    AllowedNssai:
      type: object
      required:
        - allowedSNssai
      properties:
        allowedSNssai:
          type: array
          items:
            $ref: '#/components/schemas/AllowedSNssai'

    NsiInformation:
      type: object
      required:
        - nrfId
      properties:
        nrfId:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/Fqdn'
        nsiId:
          $ref: '#/components/schemas/NsiId'

    MappingOfRequestedSNssai:
      type: object
      required:
        - servingSNssai
        - homeSNssai
      properties:
        servingSNssai:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'
        homeSNssai:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'

    MappingOfRequestedNssai:
      type: object
      required:
        - mappingOfRequestedSNssai
      properties:
        mappingOfRequestedSNssai:
          type: array
          items:
            $ref: '#/components/schemas/MappingOfRequestedSNssai'

    SliceInfoForRegistration:
      type: object
      required:
        - subscribedNSSAI
      properties:
        subscribedNSSAI:
          $ref: '#/components/schemas/SubscribedNssai'
        requestedNssai:
          type: array
          items:
            $ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'
        mappingOfRequestedSNssai:
          $ref: '#/components/schemas/MappingOfRequestedNssai'

    SliceInfoForPDUSession:
      type: object
      required:
        - sNssai
        - roamingIndication
      properties:
        sNssai:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'
        roamingIndication:
          $ref: '#/components/schemas/RoamingIndication'
        homeSNssai:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'

    ConfiguredSnssai:
      type: object
      required:
        - configuredSnssai
      properties:
        configuredSnssai:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'
        mappedHomeSnssai:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'

    ConfiguredNssai:
      type: object
      required:
        - configuredSnssai
      properties:
        configuredSnssai:
          type: array
          items:
            $ref: '#/components/schemas/ConfiguredSnssai'

    RoamingIndication:
      anyOf:
        - type: string
          enum:
            - NON_ROAMING
            - LOCAL_BREAKOUT
            - HOME_ROUTED_ROAMING
        - type: string
    NsiId:
      type: string


externalDocs:
  description: Documentation
  url: 'http://www.3gpp.org/ftp/Specs/archive/29_series/29.531/'

A.3  Nnssf_NSSAIAvailability API

openapi: 3.0.0

info:
  version: '1.R15.0.0'
  title: 'NSSF NSSAI Availability'
  description: 'NSSF NSSAI Availability Service'
security:
  - oAuth2Clientcredentials: []
servers:
  - url: https://{apiRoot}/nnssf-nssaiavailability/v1
    variables:
      apiRoot:
        default: locahhost:8080
paths:
  /nssai-availability/{nfId}:
    put:
      summary: Updates/replaces the NSSF with the S-NSSAIs the NF service
consumer (e.g AMF)supports per TA
      tags:
        - Nnssf_NSSAIAvailability_Update service operation
      operationId: Update
      parameters:
        - name: nfId
          in: path
          description: Identifier of the NF service consumer instance
          required: true
          schema:

            $ref:
'TS29571_CommonData.yaml#/components/schemas/NfInstanceId'
      requestBody:
        description: Parameters to update/replace at the NSSF, the S-NSSAIs
supported per TA
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NssaiAvailabilityInfo'
      responses:
        '200':
          description: OK (Successful update of SNSSAI information per TA)
          content:
            application/json:
              schema:
                $ref:
'#/components/schemas/AuthorizedNssaiAvailabilityInfo'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
          content:
            application/problem+json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'

    patch:
      summary: Updates an already existing S-NSSAIs per TA provided by the
NF service consumer (e.g AMF)
      tags:
        - Nnssf_NSSAIAvailability_Update service operation
      operationId: Update
      parameters:
        - name: nfId
          in: path
          description: Identifier of the NF service consumer instance
          required: true
          schema:
            type: string
      requestBody:
        description: JSON Patch instructions to update at the NSSF, the S-
NSSAIs supported per TA
        required: true
        content:
          application/json-patch+json::
            schema:
              $ref: '#/components/schemas/PatchDocument'

      responses:
        '200':
          description: OK (Successful update of SNSSAI information per TA)
          content:
            application/json:
              schema:
                $ref:
'#/components/schemas/AuthorizedNssaiAvailabilityInfo'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
          content:
            application/problem+json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'

    delete:
      summary: Deletes an already existing S-NSSAIs per TA provided by the
NF service consumer (e.g AMF)
      tags:
        - Nnssf_NSSAIAvailability_Update service operation
      operationId: Update
      parameters:
        - name: nfId
          in: path
          description: Identifier of the NF service consumer instance
          required: true
          schema:
            type: string

      responses:
        '204':
          description: No Content (Successful deletion of SNSSAI
information per TA)
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'

        default:
          description: Unexpected error
          content:
            application/problem+json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'

  /nssai-availability/subscriptions:
    post:
      summary: Creates subscriptions for notification about updates to
NSSAI availability information
      tags:
        - Nnssf_NSSAIAvailability_Update service operation
      operationId: Subscribe
      requestBody:
        description: Subscription for notification about updates to NSSAI
availability information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NssfEventSubscriptionCreateData'
      callbacks:
        nssaiAvailabilityNotification:
          '{request.body#/nfNssaiAvailabilityUri}':
            post:
              requestBody:  # contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/NssfEventNotification'
              responses:
                '204':
                  description: No Content (successful notification)

      responses:
        '201':
          description: Created (Successful creation of subscription for
notification)
          content:
            application/json:
              schema:
                $ref:
'#/components/schemas/NssfEventSubscriptionCreatedData'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'
        default:
          description: Unexpected error
          content:
            application/problem+json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'

    delete:
      summary: Deletes an already existing NSSAI availability notification
subscription
      tags:
        - Nnssf_NSSAIAvailability_Unsubscribe service operation
      operationId: Unsubscribe
      parameters:
        - name: subscriptionId
          in: path
          description: Identifier of the subscription for notification
          required: true
          schema:
            type: string

      responses:
        '204':
          description: No Content (Successful deletion of subscription for
NSSAI Availability notification)
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'

        default:
          description: Unexpected error
          content:
            application/problem+json:
              schema:
                $ref:
'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'

components:
  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: '{nrfApiRoot}/oauth2/token'
          scopes: {}
  schemas:
    NssaiAvailabilityInfo:
      type: object
      required:
        - supportedNssaiAvailabilityData
      properties:
        supportedNssaiAvailabilityData:
          $ref: '#/components/schemas/SupportedNssaiAvailabilityData'
        nfNssaiAvailabilityUri:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/Uri'
        supportedFeatures:
          $ref:
'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'

    SupportedNssaiAvailabilityData:
      type: object
      required:
        - tai
        - supportedSNssai
      properties:
        tai:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/Tai'
        supportedSNssai:
          type: array
          items:
            $ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'

    AuthorizedNssaiAvailabilityData:
      type: object
      required:
        - tai
        - supportedSNssai
      properties:
        tai:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/Tai'
        supportedSNssai:
          type: array
          items:
            $ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'
        restrictedSnssai:
          $ref: '#/components/schemas/RestrictedSnssai'

    RestrictedSnssai:
      type: object
      required:
        - homePlmnId
        - sNssai
      properties:
        homePlmnId:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/PlmnId'
        sNssai:
          type: array
          items:
            $ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'

    AuthorizedNssaiAvailabilityInfo:
      type: object
      required:
        - authorizedNssaiAvailabilityData
      properties:
        authorizedNssaiAvailabilityData:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedNssaiAvailabilityData'
        nfNssaiAvailabilityUri:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/Uri'
        supportedFeatures:
          $ref:
'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'

    NssfEventSubscriptionCreateData:
      type: object
      required:
        - nfNssaiAvailabilityUri
        - tai
        - event
      properties:
        nfNssaiAvailabilityUri:
          $ref: 'TS29571_CommonData.yaml#/components/schemas/Uri'
        tai:
          type: array
          items:
            $ref: 'TS29571_CommonData.yaml#/components/schemas/Tai'
        event:
          $ref: '#/components/schemas/NssfEventType'

    NssfEventSubscriptionCreatedData:
      type: object
      required:
        - subscriptionId
      properties:
        subscriptionId:
          type: string
        authorizedNssaiAvailabilityData:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedNssaiAvailabilityData'

    NssfEventNotification:
      type: object
      required:
        - subscriptionId
        - authorizednssaiAvailabilityData
      properties:
        subscriptionId:
          type: string
        authorizedNssaiAvailabilityData:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedNssaiAvailabilityData'
    NssfEventType:
      anyOf:
        - type: string
          enum:
          - S-NSSAI_RESTRICTED_REPORT
        - type: string
    PatchDocument:
      type: array
      items:
        $ref: 'TS29571_CommonData.yaml#/components/schemas/PatchItem'


externalDocs:
  description: Documentation
  url: 'http://www.3gpp.org/ftp/Specs/archive/29_series/29.531/'

Annex B (informative):
Change history



|Change history                                                            |


 Date |Meeting |TDoc |CR |Rev |Cat |Subject/Comment |New version | |2017-10
   |CT4#80 |C4-175279 | | | |Initial Draft. |0.1.0 | |2017-10 |CT4#81 |C4-
  175398 | | | |Implementation of C4-175280 |0.2.0 | |2018-01 |CT4#82 |C4-
181394 | | | |Implementation of C4-181240、C4-181242、C4-181244、C4-
181355、C4-181356、C4-181357 |0.3.0 | |2018-03 |CT4#83 |C4-182438 | | |
|Implementation of C4-182087、C4-182294、C4-182295、C4-182296、C4-
182297、C4-182298、C4-182299 |0.4.0 | |2018-03 |CT#79 |CP-180035 | | |
|Presented for information |1.0.0 | |2018-04 |CT4#84 |C4-183519 | | |
  |Implementation of C4-183068、C4-183071、C4-183431、C4-183432、C4-183433
|1.1.0 | |2018-05 |CT4#85 |C4-184631 | | | |Implementation of C4-184602, C4-
184023, C4-184024, C4-184025, C4-184026, C4-184603, C4-184527, C4-184528,
C4-184604, C4-184632 |1.2.0 | |2018-06 |CT#80 |CP-181108 | | | |Presented
for approval |2.0.0 | |2018-06 |CT#80 | | | | |Approved in CT#80. |15.0.0 |
|

